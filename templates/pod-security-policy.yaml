# MIT License
#
# Copyright (c) 2020-22 Threat Stack, Inc.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#######
{{- if .Values.podSecurityPolicyEnabled }}
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: {{ include "threatstack-agent.name" .}}-psp
  labels:
    app.kubernetes.io/name: {{ include "threatstack-agent.name" .}}-kubernetes-api
    helm.sh/chart: {{ include "threatstack-agent.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  allowedCapabilities: {{ .Values.capabilities | trim }}
  allowedHostPaths:
    - pathPrefix: "/"
      readOnly: false
    - pathPrefix: "/var/run/docker.sock"
      readOnly: false
    - pathPrefix: "/var/run/docker/containerd/docker-containerd.sock"
      readOnly: false
    - pathPrefix: "/run/containerd/containerd.sock"
      readOnly: false
{{- if .Values.ebpfEnabled }}
    - pathPrefix: "/sys/kernel/debug"
      readOnly: false
    - pathPrefix: "/sys/fs/cgroup"
      readOnly: false
    - pathPrefix: "/sys/fs/bpf"
      readOnly: false
{{- end }}
  hostNetwork: true
  hostPID: true
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  volumes:
    - "hostPath"
    - "secret"
{{- end }}
