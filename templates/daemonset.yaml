apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "threatstack-agent.name" .}}
  labels:
    app.kubernetes.io/name: {{ include "threatstack-agent.name" .}}
    helm.sh/chart: {{ include "threatstack-agent.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "threatstack-agent.name" .}}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/managed-by: {{ .Release.Service }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "threatstack-agent.name" . }}
        helm.sh/chart: {{ include "threatstack-agent.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
      name: {{ include "threatstack-agent.name" . }}
      annotations:
        # If configmap or secret files change, this will change the checksum annotations in the daemonset, forcing a redeploy.
        # If using an external secret reference, then if external secret name or entry change, but NOT the actual secret data,
        # this will change the checksum annotations in the deployment, forcing a redeploy.
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
{{- if not .Values.agentSetupExternalSecretRef }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
{{- else }}
        checksum/secrets: {{ .Values.agentSetupExternalSecretRef | toString | sha256sum }}
{{- end }}
{{- if .Values.daemonset.podAnnotations }}
{{ toYaml .Values.daemonset.podAnnotations | indent 8 }}
{{- end }}
    spec:
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
{{- else }}
{{- end }}
{{- if .Values.daemonset.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.daemonset.nodeSelector | indent 8 }}
{{- else }}
{{- end }}
{{- if .Values.daemonset.affinity }}
      affinity:
{{ toYaml .Values.daemonset.affinity | indent 8 }}
{{- else }}
{{- end }}
{{- if .Values.daemonset.tolerations }}
      tolerations:
{{ toYaml .Values.daemonset.tolerations | indent 8 }}
{{- else }}
{{- end }}
{{- if .Values.daemonset.priorityClassName }}
      priorityClassName: {{ .Values.daemonset.priorityClassName }}
{{- end }}
      hostNetwork: true
      hostPID: true
      serviceAccountName: {{ if .Values.rbac.create }}{{ include "threatstack-agent.name" . }}{{ else }}{{ .Values.rbac.serviceAccountName }}{{ end }}
      containers:
      - image: {{ .Values.image.repository }}:{{ if not .Values.image.version }}{{ .Chart.AppVersion }}{{ else }}{{ .Values.image.version }}{{ end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ include "threatstack-agent.name" . }}
{{- if eq .Values.gkeContainerOs true }}
{{ toYaml .Values.gkeContainerOsCmd | indent 8 }}
{{- end }}
{{- if eq .Values.gkeUbuntu true }}
{{ toYaml .Values.gkeUbuntuCmd | indent 8 }}
{{- end }}
{{- if eq .Values.eksAmazon2 true }}
{{ toYaml .Values.eksAmazon2Cmd | indent 8 }}
{{- end }}
{{- if .Values.customDaemonsetCmd }}
{{ toYaml .Values.customDaemonsetCmd | indent 8 }}
{{- end }}
{{- if .Values.daemonset.livenessProbe }}
        livenessProbe:
{{ toYaml .Values.daemonset.livenessProbe | indent 10 }}
{{- else }}
        livenessProbe:
          exec:
            command: [ "sh", "-c", "tsagent status" ]
          initialDelaySeconds: 15
          periodSeconds: 360
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
{{- end }}
        env:
          - name: THREATSTACK_SETUP_ARGS
            valueFrom:
{{- if not .Values.agentSetupExternalSecretRef }}
              secretKeyRef:
                name: {{ include "threatstack-agent.fullname" . }}
                key: ts-setup-args
{{- else }}
              secretKeyRef:
                name: {{ .Values.agentSetupExternalSecretRef.name }}
                key: {{ .Values.agentSetupExternalSecretRef.key }}
{{- end }}
          - name: THREATSTACK_CONFIG_ARGS
            valueFrom:
              configMapKeyRef:
                name: {{ include "threatstack-agent.name" . }}-config-args
                key: config-args
        securityContext:
          {{- toYaml .Values.daemonset.securityContext | nindent 10 }}
          capabilities:
            add: [{{ include "threatstack-agent.daemonset-capabilities" . | trimSuffix ", " }}]
{{- if .Values.daemonset.resources }}
        resources:
{{ toYaml .Values.daemonset.resources | trim | indent 10 }}
{{- else }}
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "400m"
{{- end }}
        volumeMounts:
          - name: hostfs
            mountPath: /threatstackfs
{{- if .Values.daemonset.customAuditRules }}
          - name: custom-audit-rules
            mountPath: /opt/threatstack/etc/audit-custom.rules
            subPath: audit-custom.rules
{{- end }}
{{- if .Values.daemonset.customTsAuditdConfig }}
          - name: custom-tsauditd-config
            mountPath: /opt/threatstack/etc/tsauditd-custom.cfg
            subPath: tsauditd-custom.cfg
{{- end }}
{{- if .Values.daemonset.customLuaFilter }}
          - name: custom-luafilter-config
            mountPath: /opt/threatstack/etc/tsauditd-custom.lua
            subPath: tsauditd-custom.lua
{{- end }}
{{- if .Values.ebpfEnabled }}
          - name: kernel-debug
            mountPath: /sys/kernel/debug
          - name: cgroup
            mountPath: /sys/fs/cgroup
          - name: bpf
            mountPath: /sys/fs/bpf
{{- end }}
      volumes:
        - hostPath:
            path: /
          name: hostfs
{{- if .Values.daemonset.customAuditRules }}
        - name: custom-audit-rules
          configMap:
            name: {{ include "threatstack-agent.name" . }}-config-args
            items:
              - key: custom-audit-rules-content
                path: audit-custom.rules
{{- end }}
{{- if .Values.daemonset.customTsAuditdConfig }}
        - name: custom-tsauditd-config
          configMap:
            name: {{ include "threatstack-agent.name" . }}-config-args
            items:
              - key: custom-tsauditd-config-content
                path: tsauditd-custom.cfg
{{- end }}
{{- if .Values.daemonset.customLuaFilter }}
        - name: custom-luafilter-config
          configMap:
            name: {{ include "threatstack-agent.name" . }}-config-args
            items:
              - key: custom-luafilter-content
                path: tsauditd-custom.lua
{{- end }}
{{- if .Values.ebpfEnabled }}
        - hostPath:
            path: /sys/kernel/debug
          name: kernel-debug
        - hostPath:
            path: /sys/fs/cgroup
          name: cgroup
        - hostPath:
            path: /sys/fs/bpf
          name: bpf
{{- end }}